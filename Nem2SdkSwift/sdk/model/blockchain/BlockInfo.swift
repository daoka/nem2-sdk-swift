// Copyright 2018 ProximaX Limited. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file.


import Foundation

/// The block info structure describes basic information of a block.
public struct BlockInfo: CustomStringConvertible {
    // MARK: Properties
    /// Block hash.
    public let hash: String
    /// Block generation hash.
    public let generationHash: String
    /// Total fee paid to the account harvesting the block. Nil when generated by listeners.
    public let totalFee: UInt64?
    /// Number of transactions included the block. Nil when generated by listeners.
    public let numTransactions: Int?
    /// The block signature.
    /// The signature was generated by the signer and can be used to validate that the blockchain data was not modified by a node.
    public let signature: String
    /// Public account of block harvester.
    public let signer: PublicAccount
    /// Network type.
    public let networkType: NetworkType
    /// Block transaction version.
    public let version: Int
    /// Block transaction type.
    public let type: Int
    /// Height of which the block was confirmed. Each block has a unique height. Subsequent blocks differ in height by 1.
    public let height: UInt64
    /// The number of seconds elapsed since the creation of the nemesis blockchain.
    public let timestamp: UInt64
    /// POI difficulty to harvest a block.
    public let difficulty: UInt64
    /// The last block hash.
    public let previousBlockHash: String
    /// The block transaction hash.
    public let blockTransactionHash: String


    // MAK: Methods
    /// :nodoc:
    public init(hash: String,
                generationHash: String,
                totalFee: UInt64?,
                numTransactions: Int?,
                signature: String,
                signer: PublicAccount,
                networkType: NetworkType,
                version: Int,
                type: Int,
                height: UInt64,
                timestamp: UInt64,
                difficulty: UInt64,
                previousBlockHash: String,
                blockTransactionHash: String) {
        self.hash = hash
        self.generationHash = generationHash
        self.totalFee = totalFee
        self.numTransactions = numTransactions
        self.signature = signature
        self.signer = signer
        self.networkType = networkType
        self.version = version
        self.type = type
        self.height = height
        self.timestamp = timestamp
        self.difficulty = difficulty
        self.previousBlockHash = previousBlockHash
        self.blockTransactionHash = blockTransactionHash
    }

    public var description: String {
        return "BlockInfo{" +
                "hash='\(hash)', " +
                "generationHash='\(generationHash)', " +
                "totalFee=\(String(describing: totalFee)), " +
                "numTransactions=\(String(describing: numTransactions)), " +
                "signature=\(signature), " +
                "signer=\(signer), " +
                "networkType=\(networkType), " +
                "version=\(version), " +
                "height=\(height), " +
                "timestamp=\(timestamp), " +
                "difficulty=\(difficulty), " +
                "previousBlockHash='\(previousBlockHash)', " +
                "blockTransactionHash='\(blockTransactionHash)'"
    }
}
