// Copyright 2018 ProximaX Limited. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file.
//
// BlockMetaDTO.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



class BlockMetaDTO: Codable {

    var hash: String
    var generationHash: String
    var totalFee: UInt64DTO
    var numTransactions: Double


    
    init(hash: String, generationHash: String, totalFee: UInt64DTO, numTransactions: Double) {
        self.hash = hash
        self.generationHash = generationHash
        self.totalFee = totalFee
        self.numTransactions = numTransactions
    }
    

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(hash, forKey: "hash")
        try container.encode(generationHash, forKey: "generationHash")
        try container.encode(totalFee, forKey: "totalFee")
        try container.encode(numTransactions, forKey: "numTransactions")
    }

    // Decodable protocol methods

    required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        hash = try container.decode(String.self, forKey: "hash")
        generationHash = try container.decode(String.self, forKey: "generationHash")
        totalFee = try container.decode(UInt64DTO.self, forKey: "totalFee")
        numTransactions = try container.decode(Double.self, forKey: "numTransactions")
    }
}

