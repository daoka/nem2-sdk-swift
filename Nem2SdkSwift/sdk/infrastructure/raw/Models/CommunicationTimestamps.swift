// Copyright 2018 ProximaX Limited. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file.
//
// CommunicationTimestamps.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



class CommunicationTimestamps: Codable {

    var sendTimestamp: UInt64DTO?
    var receiveTimestamp: UInt64DTO?


    
    init(sendTimestamp: UInt64DTO?, receiveTimestamp: UInt64DTO?) {
        self.sendTimestamp = sendTimestamp
        self.receiveTimestamp = receiveTimestamp
    }
    

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(sendTimestamp, forKey: "sendTimestamp")
        try container.encodeIfPresent(receiveTimestamp, forKey: "receiveTimestamp")
    }

    // Decodable protocol methods

    required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        sendTimestamp = try container.decodeIfPresent(UInt64DTO.self, forKey: "sendTimestamp")
        receiveTimestamp = try container.decodeIfPresent(UInt64DTO.self, forKey: "receiveTimestamp")
    }
}

