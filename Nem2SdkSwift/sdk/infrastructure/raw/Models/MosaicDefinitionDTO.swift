// Copyright 2018 ProximaX Limited. All rights reserved.
// Use of this source code is governed by the Apache 2.0
// license that can be found in the LICENSE file.
//
// MosaicDefinitionDTO.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



class MosaicDefinitionDTO: Codable {

    var namespaceId: UInt64DTO
    var mosaicId: UInt64DTO
    var supply: UInt64DTO
    var height: UInt64DTO
    var owner: String
    var properties: MosaicPropertiesDTO
    var levy: AnyObjectDictionary


    
    init(namespaceId: UInt64DTO, mosaicId: UInt64DTO, supply: UInt64DTO, height: UInt64DTO, owner: String, properties: MosaicPropertiesDTO, levy: AnyObjectDictionary) {
        self.namespaceId = namespaceId
        self.mosaicId = mosaicId
        self.supply = supply
        self.height = height
        self.owner = owner
        self.properties = properties
        self.levy = levy
    }
    

    // Encodable protocol methods

    func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(namespaceId, forKey: "namespaceId")
        try container.encode(mosaicId, forKey: "mosaicId")
        try container.encode(supply, forKey: "supply")
        try container.encode(height, forKey: "height")
        try container.encode(owner, forKey: "owner")
        try container.encode(properties, forKey: "properties")
        try container.encode(levy, forKey: "levy")
    }

    // Decodable protocol methods

    required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        namespaceId = try container.decode(UInt64DTO.self, forKey: "namespaceId")
        mosaicId = try container.decode(UInt64DTO.self, forKey: "mosaicId")
        supply = try container.decode(UInt64DTO.self, forKey: "supply")
        height = try container.decode(UInt64DTO.self, forKey: "height")
        owner = try container.decode(String.self, forKey: "owner")
        properties = try container.decode(MosaicPropertiesDTO.self, forKey: "properties")
        levy = try container.decode(AnyObjectDictionary.self, forKey: "levy")
    }
}

